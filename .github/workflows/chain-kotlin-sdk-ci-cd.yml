name: Chain Kotlin SQK CI/CD

on:
  push:
    branches:
      - master

jobs:

  build:
    name: Build project
    runs-on: ubuntu-latest
    continue-on-error: false

    env:
      VERSION: build
      OSSRHUSERNAME: ossrhusername
      OSSRHPASSWORD: ossrhpassword

    steps:

      - name: Prepare system
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Java SDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build project
        run: |
          envsubst '${env.VERSION}','${env.OSSRHUSERNAME}','${env.OSSRHPASSWORD}' < build.gradle > build.gradle.new
          mv build.gradle.new build.gradle
          ./gradlew assemble


  deploy:
    name: Deploy SDK
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [build]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy server
        run: |
          sudo apt install openssh-client
          sudo curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          eval $(ssh-agent -s)
          echo "${{ secrets.SPRINT_DEPLOY_SSH_KEY }}" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan ${{ secrets.SPRINT_SERVER }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          export DOCKER_HOST="ssh://gitlab@${{ secrets.SPRINT_SERVER }}"
          export MONGODB_PASSWORD="${{ secrets.SPRINT_MONGO_PASSWORD }}"
          export BITCOIN_NODE_ADDRESS="${{ secrets.SPRINT_BITCOIN_NODE }}"
          export BITCOIN_USERNAME="${{ secrets.SPRINT_BITCOIN_USERNAME }}"
          export BITCOIN_PASSWORD="${{ secrets.SPRINT_BITCOIN_PASSWORD }}"
          export ETHEREUM_NODE_ADDRESS="${{ secrets.SPRINT_ETHEREUM_NODE_ADDRESS }}"
          export DOCKER_IMAGE_TAG="openplatform/open-state:${{ env.IMAGE_TAG }}"
          docker login -u ${{ secrets.DOCKERHUB_USER_NAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker-compose -f docker-compose.yml up -d
          ssh -i /dev/null gitlab@${{ secrets.SPRINT_SERVER }} "
                                    docker stop open-state && \
                                    IMG=\$(docker ps -a --filter='name=^/open-state$' --format='{{.Image}}') &&  \
                                    docker rm -f open-state && \
                                    docker rmi \$IMG; \
                                    exit 0
                                  "
          docker-compose -f docker-compose.yml up -d